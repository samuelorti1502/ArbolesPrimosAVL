//
//
//package Clases;
//
//import java.awt.event.ActionEvent;
//import java.util.Enumeration;
//import javax.swing.JTree;
//import javax.swing.plaf.TreeUI;
//import javax.swing.tree.DefaultMutableTreeNode;
//import javax.swing.tree.DefaultTreeModel;
//import javax.swing.tree.TreePath;
//import javax.swing.tree.TreeSelectionModel;
//
//
//public class FrmArboles extends javax.swing.JFrame {
//
//    String strRecorrido = "";
//    
//    public FrmArboles() {
//        initComponents();
//        
//        txtConsola.setText("Programa iniciado correctamente..." + System.lineSeparator());
//        
//        btnLimpiarArbol.doClick();
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jLabel1 = new javax.swing.JLabel();
//        jScrollPane1 = new javax.swing.JScrollPane();
//        jTree1 = new javax.swing.JTree();
//        txtValor = new javax.swing.JTextField();
//        jLabel2 = new javax.swing.JLabel();
//        btnAgregar = new javax.swing.JButton();
//        btnLimpiarArbol = new javax.swing.JButton();
//        jScrollPane2 = new javax.swing.JScrollPane();
//        txtConsola = new javax.swing.JTextArea();
//        jLabel3 = new javax.swing.JLabel();
//        btnBuscar = new javax.swing.JButton();
//        jLabel4 = new javax.swing.JLabel();
//        btnPreorden = new javax.swing.JButton();
//        btnOrden = new javax.swing.JButton();
//        btnPostorden = new javax.swing.JButton();
//        btnEliminar = new javax.swing.JButton();
//        jLabel5 = new javax.swing.JLabel();
//        txtEjercicio2 = new javax.swing.JTextField();
//        jButton1 = new javax.swing.JButton();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//
//        jLabel1.setText("Ejemplo de un √Årbol Binario en JAVA");
//
//        jTree1.setLargeModel(true);
//        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                jTree1MouseClicked(evt);
//            }
//        });
//        jScrollPane1.setViewportView(jTree1);
//
//        jLabel2.setText("Ingrese un valor:");
//
//        btnAgregar.setText("Agregar");
//        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnAgregarActionPerformed(evt);
//            }
//        });
//
//        btnLimpiarArbol.setText("Limpiar");
//        btnLimpiarArbol.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnLimpiarArbolActionPerformed(evt);
//            }
//        });
//
//        txtConsola.setColumns(20);
//        txtConsola.setRows(5);
//        jScrollPane2.setViewportView(txtConsola);
//
//        jLabel3.setText("Consola:");
//
//        btnBuscar.setText("Buscar");
//        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnBuscarActionPerformed(evt);
//            }
//        });
//
//        jLabel4.setText("Seleccione un recorrido");
//
//        btnPreorden.setText("Preorden");
//        btnPreorden.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnPreordenActionPerformed(evt);
//            }
//        });
//
//        btnOrden.setText("Inorden");
//        btnOrden.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnOrdenActionPerformed(evt);
//            }
//        });
//
//        btnPostorden.setText("Postorden");
//        btnPostorden.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnPostordenActionPerformed(evt);
//            }
//        });
//
//        btnEliminar.setText("Eliminar");
//        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnEliminarActionPerformed(evt);
//            }
//        });
//
//        jLabel5.setText("Buscar todos los mayores que: ");
//
//        txtEjercicio2.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                txtEjercicio2ActionPerformed(evt);
//            }
//        });
//
//        jButton1.setText("Buscar");
//        jButton1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jButton1ActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(layout.createSequentialGroup()
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
//                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
//                            .addComponent(jLabel1))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(txtValor)
//                            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(btnLimpiarArbol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(btnPreorden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(btnPostorden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addComponent(btnOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                            .addGroup(layout.createSequentialGroup()
//                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(jButton1))
//                            .addGroup(layout.createSequentialGroup()
//                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                    .addComponent(jLabel2)
//                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addComponent(jLabel5)
//                                    .addGroup(layout.createSequentialGroup()
//                                        .addGap(10, 10, 10)
//                                        .addComponent(txtEjercicio2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
//                                .addGap(0, 0, Short.MAX_VALUE))))
//                    .addComponent(jScrollPane2)
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(jLabel3)
//                        .addGap(0, 0, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(jScrollPane1)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(jLabel3)
//                        .addGap(1, 1, 1))
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(jLabel2)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnAgregar)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnBuscar)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnEliminar)
//                        .addGap(6, 6, 6)
//                        .addComponent(btnLimpiarArbol)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                        .addComponent(jLabel5)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                        .addComponent(txtEjercicio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                            .addComponent(jLabel4)
//                            .addComponent(jButton1))
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnPreorden)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnOrden)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(btnPostorden)
//                        .addGap(32, 32, 32)))
//                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//
//    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
//        try
//        {
//            TreeSelectionModel tsm = jTree1.getSelectionModel();
//
//            if(tsm.getSelectionCount() > 0)
//            {
//                DefaultMutableTreeNode nodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
//                txtValor.setText(nodoSeleccionado.getUserObject().toString());
//
//                txtConsola.setText(txtConsola.getText() + "Nodo seleccionado: " + txtValor.getText() + System.lineSeparator());
//            }
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en jTree1MouseClicked(): " + ex.getMessage() + System.lineSeparator());
//        }        
//    }//GEN-LAST:event_jTree1MouseClicked
//
//    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
//        try{
//            
//            if (txtValor.getText().length() <= 0) 
//                    throw new Exception("¬°Ingrese un valor por favor!");
//                
//            int valorNuevo = 0;
//            try{ valorNuevo = Integer.parseInt(txtValor.getText());}
//            catch(Exception ex){throw new Exception("¬°Ingrese un entero!");}
//
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            if(nodoRaiz != null)
//            {
//                DefaultMutableTreeNode nodoAuxiliar = nodoRaiz;
//                DefaultMutableTreeNode nodoPadre;
//                
//                while(true){
//                    nodoPadre = nodoAuxiliar;
//                    String s = nodoAuxiliar.getUserObject().toString().split("-")[1].trim();
//                    int valorNodoActual = Integer.parseInt(s);
//                    if(valorNuevo < valorNodoActual){
//                        nodoAuxiliar = (DefaultMutableTreeNode) nodoAuxiliar.getFirstChild();
//                        
//                        if(nodoAuxiliar.getUserObject().toString().equals("I - NULL"))
//                        {
//                            nodoAuxiliar.setUserObject("I - " + valorNuevo);
//                            nodoAuxiliar.add(new DefaultMutableTreeNode("I - NULL"));
//                            nodoAuxiliar.add(new DefaultMutableTreeNode("D - NULL"));
//                            
//                            jTree1.expandPath(new TreePath(nodoAuxiliar.getPath()));
//                            txtConsola.setText(txtConsola.getText() + "Nuevo nodo agregado: " + txtValor.getText() + System.lineSeparator());
//                            return;
//                        }
//                    }
//                    else
//                    {
//                        nodoAuxiliar = (DefaultMutableTreeNode) nodoAuxiliar.getLastChild();
//                        
//                        if(nodoAuxiliar.getUserObject().toString().equals("D - NULL"))
//                        {
//                            nodoAuxiliar.setUserObject("D - " + valorNuevo);
//                            nodoAuxiliar.add(new DefaultMutableTreeNode("I - NULL"));
//                            nodoAuxiliar.add(new DefaultMutableTreeNode("D - NULL"));
//                            
//                            jTree1.expandPath(new TreePath(nodoAuxiliar.getPath()));
//                            txtConsola.setText(txtConsola.getText() + "Nuevo nodo agregado: " + txtValor.getText() + System.lineSeparator());
//                            return;
//                        }
//                    }
//                }
//            }
//            else {               
//                              
//                nodoRaiz = new DefaultMutableTreeNode("R - " + txtValor.getText());
//                DefaultMutableTreeNode nodoIzquierdo = new DefaultMutableTreeNode("I - NULL");
//                DefaultMutableTreeNode nodoDerecho = new DefaultMutableTreeNode("D - NULL");
//                
//                nodoRaiz.add(nodoIzquierdo);
//                nodoRaiz.add(nodoDerecho);
//                
//                DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
//                modeloArbol.setRoot(nodoRaiz);
//                
//                txtConsola.setText(txtConsola.getText() + "Nodo RA√çZ agregado: " + txtValor.getText() + System.lineSeparator());
//            }
//
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnAgregarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        }                    
//    }//GEN-LAST:event_btnAgregarActionPerformed
//
//    private void btnLimpiarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarArbolActionPerformed
//        try
//        {
//            DefaultTreeModel modeloArbol = (DefaultTreeModel) jTree1.getModel();
//            modeloArbol.setRoot(null);
//            
//            txtConsola.setText(txtConsola.getText() + "¬°Vaciado del √°rbol! " + System.lineSeparator());
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnLimpiarArbolActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        }
//    }//GEN-LAST:event_btnLimpiarArbolActionPerformed
//
//    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
//        try{
//            
//            if(txtValor.getText().length() <= 0)
//                throw new Exception("¬°Ingrese un valor!");
//            
//            if(jTree1.getModel().getRoot() == null)
//                throw new Exception("¬°El √°rbol est√° vac√≠o!");
//            
//            DefaultMutableTreeNode nodoEncontrado = null;
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            
//            for (Enumeration e = nodoRaiz.depthFirstEnumeration(); e.hasMoreElements() && nodoEncontrado == null;) 
//            {
//                DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) e.nextElement();                
//                if (txtValor.getText().equals(nodo.getUserObject().toString().split("-")[1].trim())) {
//                    nodoEncontrado = nodo;
//                }
//            }
//            
//            if(nodoEncontrado == null)
//            {
//                txtConsola.setText(txtConsola.getText() + "¬°Valor no encontrado!" + System.lineSeparator());
//                return;
//            }   
//            
//            TreePath rutaNodo = new TreePath(nodoEncontrado.getPath());
//            jTree1.setSelectionPath(rutaNodo);
//            jTree1.expandPath(rutaNodo);
//
//            txtConsola.setText(txtConsola.getText() + "Nodo buscado " + nodoEncontrado.getUserObject().toString() + " en: " +  rutaNodo.toString() + System.lineSeparator());
//                
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnBuscarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        } 
//    }//GEN-LAST:event_btnBuscarActionPerformed
//
//    private void btnPreordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreordenActionPerformed
//        try{              
//            if(jTree1.getModel().getRoot() == null)
//                throw new Exception("¬°Ning√∫n nodo en el √°rbol para recorrer!");
//            
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            txtConsola.setText(txtConsola.getText() + "Recorrido PREORDEN: ");
//            
//            strRecorrido = "";
//            RecorridoPreorden(nodoRaiz);
//            txtConsola.setText(txtConsola.getText() + strRecorrido.substring(0, strRecorrido.length() - 3) + "." + System.lineSeparator());
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnPreordenActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        } 
//    }//GEN-LAST:event_btnPreordenActionPerformed
//    
//    public void RecorridoPreorden(DefaultMutableTreeNode nodoRaiz)
//    {
//        if(!nodoRaiz.getUserObject().toString().equals("I - NULL") && !nodoRaiz.getUserObject().toString().equals("D - NULL"))
//        {
//            strRecorrido += nodoRaiz.getUserObject().toString().split("-")[1].trim() + " - ";
//            RecorridoPreorden((DefaultMutableTreeNode) nodoRaiz.getFirstChild());
//            RecorridoPreorden((DefaultMutableTreeNode) nodoRaiz.getLastChild());
//        }
//    }
//    
//    private void btnOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenActionPerformed
//        try{  
//            if(jTree1.getModel().getRoot() == null)
//                throw new Exception("¬°Ning√∫n nodo en el √°rbol para recorrer!");
//            
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            txtConsola.setText(txtConsola.getText() + "Recorrido INORDEN: ");
//            
//            strRecorrido = "";
//            RecorridoInorden(nodoRaiz);
//            txtConsola.setText(txtConsola.getText() + strRecorrido.substring(0, strRecorrido.length() - 3) + "." + System.lineSeparator());
//            
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnOrdenActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        } 
//    }//GEN-LAST:event_btnOrdenActionPerformed
//    
//    public void RecorridoInorden(DefaultMutableTreeNode nodoRaiz)
//    {
//        if(!nodoRaiz.getUserObject().toString().equals("I - NULL") && !nodoRaiz.getUserObject().toString().equals("D - NULL"))
//        {
//            RecorridoInorden((DefaultMutableTreeNode) nodoRaiz.getFirstChild());
//            strRecorrido += nodoRaiz.getUserObject().toString().split("-")[1].trim() + " - ";
//            RecorridoInorden((DefaultMutableTreeNode) nodoRaiz.getLastChild());
//        }
//    }
//    
//    private void btnPostordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostordenActionPerformed
//        try{  
//            if(jTree1.getModel().getRoot() == null)
//                throw new Exception("¬°Ning√∫n nodo en el √°rbol para recorrer!");
//            
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            txtConsola.setText(txtConsola.getText() + "Recorrido POSTORDEN: ");
//            
//            strRecorrido = "";
//            RecorridoPostorden(nodoRaiz);
//            txtConsola.setText(txtConsola.getText() + strRecorrido.substring(0, strRecorrido.length() - 3) + "." + System.lineSeparator());
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnPostordenActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        } 
//    }//GEN-LAST:event_btnPostordenActionPerformed
//
//    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
//        
//    }//GEN-LAST:event_btnEliminarActionPerformed
//
//    private void txtEjercicio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEjercicio2ActionPerformed
//        // TODO add your handling code here:
//    }//GEN-LAST:event_txtEjercicio2ActionPerformed
//
//    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        try{
//            
//            if(txtEjercicio2.getText().length() <= 0)
//                throw new Exception("¬°Ingrese un valor!");
//            
//            if(jTree1.getModel().getRoot() == null)
//                throw new Exception("¬°El √°rbol est√° vac√≠o!");
//            
//            DefaultMutableTreeNode nodoEncontrado = null;
//            DefaultMutableTreeNode nodoRaiz = (DefaultMutableTreeNode) jTree1.getModel().getRoot();
//            
//            for (Enumeration e = nodoRaiz.depthFirstEnumeration(); e.hasMoreElements() && nodoEncontrado == null;) 
//            {
//                DefaultMutableTreeNode nodo = (DefaultMutableTreeNode) e.nextElement();                
//                if (txtEjercicio2.getText().equals(nodo.getUserObject().toString().split("-")[1].trim())) {
//                    nodoEncontrado = nodo;
//                }
//            }
//            
//            if(nodoEncontrado == null)
//            {
//                txtConsola.setText(txtConsola.getText() + "¬°Valor no encontrado!" + System.lineSeparator());
//                return;
//            }                                   
//            TreePath rutaNodo = new TreePath(nodoEncontrado.getPath());
//            jTree1.setSelectionPath(rutaNodo);
//            jTree1.expandPath(rutaNodo);
//
//            //txtConsola.setText(txtConsola.getText() + "Nodo buscado " + nodoEncontrado.getUserObject().toString() + " en: " +  rutaNodo.toString() + System.lineSeparator());
//                
//        }catch(Exception ex)
//        {
//            txtConsola.setText(txtConsola.getText() + "Error en btnBuscarActionPerformed(): " + ex.getMessage() + System.lineSeparator());
//        }
//    }//GEN-LAST:event_jButton1ActionPerformed
//    
//    public void RecorridoPostorden(DefaultMutableTreeNode nodoRaiz)
//    {
//        if(!nodoRaiz.getUserObject().toString().equals("I - NULL") && !nodoRaiz.getUserObject().toString().equals("D - NULL"))
//        {
//            RecorridoPostorden((DefaultMutableTreeNode) nodoRaiz.getFirstChild());
//            RecorridoPostorden((DefaultMutableTreeNode) nodoRaiz.getLastChild());
//            strRecorrido += nodoRaiz.getUserObject().toString().split("-")[1].trim() + " - ";
//        }
//    }
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ArbolBinarioG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ArbolBinarioG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ArbolBinarioG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ArbolBinarioG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmArboles().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JButton btnAgregar;
//    private javax.swing.JButton btnBuscar;
//    private javax.swing.JButton btnEliminar;
//    private javax.swing.JButton btnLimpiarArbol;
//    private javax.swing.JButton btnOrden;
//    private javax.swing.JButton btnPostorden;
//    private javax.swing.JButton btnPreorden;
//    private javax.swing.JButton jButton1;
//    private javax.swing.JLabel jLabel1;
//    private javax.swing.JLabel jLabel2;
//    private javax.swing.JLabel jLabel3;
//    private javax.swing.JLabel jLabel4;
//    private javax.swing.JLabel jLabel5;
//    private javax.swing.JScrollPane jScrollPane1;
//    private javax.swing.JScrollPane jScrollPane2;
//    private javax.swing.JTree jTree1;
//    private javax.swing.JTextArea txtConsola;
//    private javax.swing.JTextField txtEjercicio2;
//    private javax.swing.JTextField txtValor;
//    // End of variables declaration//GEN-END:variables
//}
